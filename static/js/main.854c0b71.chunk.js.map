{"version":3,"sources":["ColorPicker.js","App.js","index.js"],"names":["noop","pickers","chrome","ChromePicker","sketch","SketchPicker","ColorPicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","hex","onChange","handleChangeComplete","onChangeComplete","nextProps","_this$props","small","type","position","Picker","styles","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","wrapper","transform","paddingBottom","react_default","a","createElement","style","onClick","picker","assign","Component","defaultProps","App","varName","vars","handleColorChange","varname","console","log","window","less","modifyVars","then","localStorage","setItem","JSON","stringify","catch","error","getColorPicker","key","className","ColorPicker_ColorPicker","presetColors","resetTheme","initialValue","@primary-color","@secondary-color","parse","getItem","_this2","colorPickers","keys","map","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.854c0b71.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ChromePicker, SketchPicker } from 'react-color';\n\nconst noop = () => { };\n\nconst pickers = {\n  chrome: ChromePicker,\n  sketch: SketchPicker,\n};\n\nexport default class ColorPicker extends Component {\n  static defaultProps = {\n    onChange: noop,\n    onChangeComplete: noop,\n    position: 'bottom',\n  }\n\n  constructor(props) {\n    super();\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ color: nextProps.color });\n  }\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n  handleChange = (color) => {\n    this.setState({ color: color.hex });\n    this.props.onChange(color.hex, color);\n  };\n  handleChangeComplete = (color) => {\n    this.setState({ color: color.hex });\n    this.props.onChangeComplete(color.hex);\n  };\n  render() {\n    const { small, type, position } = this.props;\n\n    const Picker = pickers[type];\n\n    const styles = {\n      color: {\n        width: small ? '16px' : '120px',\n        height: small ? '16px' : '24px',\n        borderRadius: '2px',\n        background: this.state.color,\n      },\n      swatch: {\n        padding: '4px',\n        background: '#fff',\n        borderRadius: '2px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n      wrapper: {\n        position: 'inherit',\n        zIndex: '100',\n      },\n    };\n\n    if (position === 'top') {\n      styles.wrapper.transform = 'translateY(-100%)';\n      styles.wrapper.paddingBottom = 8;\n    }\n\n    const swatch = (\n      <div style={styles.swatch} onClick={this.handleClick}>\n        <div style={styles.color} />\n      </div>\n    );\n    const picker = this.state.displayColorPicker ? (\n      <div style={styles.popover}>\n        <div style={styles.cover} onClick={this.handleClose} />\n        <div style={styles.wrapper}>\n          <Picker\n            {...this.props}\n            color={this.state.color}\n            onChange={this.handleChange}\n            onChangeComplete={this.handleChangeComplete}\n          />\n        </div>\n      </div>\n    ) : null;\n\n    if (position === 'top') {\n      return <div>{picker}{swatch}</div>;\n    }\n    return <div>{swatch}{picker}</div>;\n  }\n}\n","/* eslint-disable no-console */\nimport React, { Component } from \"react\";\n\nimport './App.css';\n\nimport ColorPicker from \"./ColorPicker\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let initialValue = {\n            '@primary-color': '#1987a7',\n            '@secondary-color': '#0000ff'\n        };\n        let vars = {};\n\n        try {\n            vars = Object.assign({}, initialValue, JSON.parse(localStorage.getItem('app-theme')));\n        } finally {\n            this.state = { vars, initialValue };\n            window.less\n                .modifyVars(vars)\n                .then(() => { })\n                .catch(error => {\n                    console.error(`Failed to update theme`);\n                });\n        }\n    }\n    onChangeComplete = (varName, color) => {\n        const { vars } = this.state;\n        vars[varName] = color;\n        this.setState({ vars });\n    };\n    handleColorChange = (varname, color) => {\n        const { vars } = this.state;\n        if (varname) vars[varname] = color;\n        console.log(vars);\n        window.less\n            .modifyVars(vars)\n            .then(() => {\n                this.setState({ vars });\n                localStorage.setItem(\"app-theme\", JSON.stringify(vars));\n            })\n            .catch(error => {\n                console.error(`Failed to update theme`);\n            });\n    };\n\n    getColorPicker = (varName) => (\n        <div\n            key={varName}\n            className=\"item\">\n            <div>\n                {varName}\n            </div>\n            <div>\n                <ColorPicker\n                    type=\"sketch\"\n                    small\n                    color={this.state.vars[varName]}\n                    position=\"bottom\"\n                    presetColors={[\n                        '#F5222D',\n                        '#FA541C',\n                        '#FA8C16',\n                        '#FAAD14',\n                        '#FADB14',\n                        '#A0D911',\n                        '#52C41A',\n                        '#13C2C2',\n                        '#1890FF',\n                        '#2F54EB',\n                        '#722ED1',\n                        '#EB2F96',\n                    ]}\n                    onChangeComplete={color => this.handleColorChange(varName, color)}\n                />\n            </div>\n        </div>\n    )\n    resetTheme = () => {\n        localStorage.setItem('app-theme', '{}');\n        this.setState({ vars: this.state.initialValue });\n        window.less\n            .modifyVars(this.state.initialValue)\n            .catch(error => {\n                console.error(`Failed to reset theme`);\n            });\n    }\n\n    render() {\n        const colorPickers = Object.keys(this.state.vars).map(varName => this.getColorPicker(varName));\n        return (\n            <div className=\"App\">\n                <div className=\"color-wrapper\">\n                    <div className=\"title primary\">\n                        Theme\n                    </div>\n                    <div className=\"wrapper-body\">\n                        {colorPickers}\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"btn-group\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-default\">\n                            Cancel\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                    </div>\n                    <div className=\"secondary-color\">\n                        color : @secondary-color;\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}